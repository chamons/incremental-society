@using IncrementalSociety.Web.Services
@using IncrementalSociety.Model

<div>
	<div class="d-flex flex-column area-building" style="background-color:@BackgroundColor;" onclick=@OnClick>
		<p class="area-building-title" >@Building</p>
		@if (HasBuilding) {
			<div class="d-flex flex-wrap">
				@foreach (var res in GameService.GetBuildingResources (@Building))
				{
					<div class="building-resource d-flex align-items-center">
						<img class="resource-image" src="@GameService.GetImageFilename(@res.Key)" />
						<div class="@GameService.GetResourceDeltaClass(res.Value)">@res.Value</div>
					</div>
				}
			</div>
		}
	</div>
</div>

@functions {
	[Parameter]
	Area Area { get; set; }

	[Parameter]
	int Index { get; set; }

	[Parameter]
	string Building { get; set; }
	
	[Parameter]
	GameService GameService { get; set; }

	bool HasBuilding => !String.IsNullOrEmpty (Building);

	string BackgroundColor
	{
		get
		{
			switch (GameService.CurrentUIState) 
			{
				case GameUIState.SelectBuildingToDestory:
					return HasBuilding ? "gray" : "white"; 
				default:
					return "white";	
			}
		}
	}
	
	void OnClick ()
	{
		switch (GameService.CurrentUIState) 
		{
			case GameUIState.SelectBuildingToDestory:
				if (HasBuilding) {
					GameService.OnDestroySelection (Area, Index);
				}
				break;
		}
	}
}
