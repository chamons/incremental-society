@using IncrementalSociety.Web.Services
@using IncrementalSociety.Model

@inject GameService GameService

@if (Exception != null) {
	<div class="alert alert-danger alert-dismissible fade show" role="alert">
		<strong>Internal Error: </strong>
		@foreach (var line in ExceptionLines)
		{
			<p>@line</p>
		}
		<button type="button" class="close" data-dismiss="alert" aria-label="Close" onclick="@OnCloseClick">
			<span aria-hidden="true">&times;</span>
		</button>
	</div>
}

@functions {

	string Exception;

	string[] ExceptionLines => Exception.Split(new[] { Environment.NewLine }, StringSplitOptions.None);


	protected override void OnInit ()
	{
		GameService.CurrentUIStateChanged += OnUIStateChanged;
	}

	void OnUIStateChanged (object sender, GameUIStateChangedEventArgs args)
	{
		if (GameService.CurrentUIState == GameUIState.InternalError) {
			Exception = ((string)args.Options["Exception"]);
			StateHasChanged ();
			GameService.SetUIState (GameUIState.Default);
		}
		StateHasChanged ();
	}

	void OnCloseClick ()
	{
		Exception = null;
		StateHasChanged ();
	}
}
